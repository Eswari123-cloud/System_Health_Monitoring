import configparser
import smtplib
import requests

# Initialize ConfigParser
config = configparser.ConfigParser()

# Read the config.ini file
config.read('config.ini')

# Access email settings
email_sender = config['email']['EMAIL_SENDER']
email_receiver = config['email']['EMAIL_RECEIVER']
smtp_server = config['email']['SMTP_SERVER']
smtp_port = config['email']['SMTP_PORT']
smtp_user = config['email']['SMTP_USER']
smtp_password = config['email']['SMTP_PASSWORD']

# Access Teams webhook URL
teams_webhook_url = config['teams']['WEBHOOK_URL']

# Function to send an email
def send_email(subject, message):
    try:
        with smtplib.SMTP(smtp_server, smtp_port) as server:
            server.starttls()
            server.login(smtp_user, smtp_password)
            email_message = f"Subject: {subject}\n\n{message}"
            server.sendmail(email_sender, email_receiver, email_message)
            print("Email sent successfully.")
    except Exception as e:
        print(f"Failed to send email: {str(e)}")

# Function to send a notification to Microsoft Teams
def send_teams_notification(message):
    try:
        payload = {
            "text": message
        }
        response = requests.post(teams_webhook_url, json=payload)
        if response.status_code == 200:
            print("Teams notification sent successfully.")
        else:
            print(f"Failed to send Teams notification. Status code: {response.status_code}")
    except Exception as e:
        print(f"Failed to send Teams notification: {str(e)}")

# Example usage
if __name__ == "__main__":
    # Send a test email
    send_email("Test Subject", "This is a test email message.")

    # Send a test Microsoft Teams notification
    send_teams_notification("This is a test Teams notification message.")
